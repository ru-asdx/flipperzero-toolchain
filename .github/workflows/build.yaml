name: 'Build toolchain'

on:
  push:
    branches:
      - 'asdx/**'
      - main
    tags:
      - '*'
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
   contents: read

jobs:
  build-toolchain:
    name: build toolchain for ${{ matrix.config.os }}/${{ matrix.config.arch }}
    runs-on: ${{ matrix.config.runner_os }}

    strategy:
      fail-fast: false
      matrix:
        config:
#        - {
#            arch: arm64,
#            os: linux,
#            runner_os: ubuntu-24.04-arm
#          }
#        - {
#            arch: amd64,
#            os: linux,
#            runner_os: ubuntu-24.04
#          }
#        - {
#            arch: amd64,
#            os: windows,
#            runner_os: ubuntu-24.04
#          }
        - {
            arch: arm64+amd64,
            os: darwin,
            runner_os: macos-14
          }

    env:
      IMAGE_NAME: flipperzero-toolchain-${{ matrix.config.os }}
      IMAGE_ARCH: ${{ matrix.config.arch }}

    steps:
      - name: free a little hdd space
        if: startsWith(matrix.config.runner_os,'ubuntu-')
        run: |
          df -h
          sudo rm -rf /usr/local/share/chromium || true
          sudo rm -rf /usr/local/share/powershell || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL  || true
          sudo rm -rf /opt/hostedtoolcache/Python || true
          sudo rm -rf /opt/hostedtoolcache/go || true
          sudo rm -rf /opt/hostedtoolcache/node || true
          df -h

      - name: 'checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 'Set image tag and name'
        id: meta
        run: |
          IMAGE_TAG="0"
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            REF=${{ github.ref }};
            TAG_FULL=${REF#refs/*/};
            IMAGE_TAG=${TAG_FULL//\//_};
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "image_arch=${IMAGE_ARCH}" >> $GITHUB_OUTPUT

      - name: setup docker buildx
        if: startsWith(matrix.config.runner_os,'ubuntu-')
        uses: docker/setup-buildx-action@v3

      - name: merge dockerfiles
        run: |
          cat ./${{ matrix.config.os }}/Dockerfile.* > ./${{ matrix.config.os }}/Dockerfile

      - name: build and export base_build image
        if: startsWith(matrix.config.runner_os,'ubuntu-')
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          file: ./${{ matrix.config.os }}/Dockerfile
          context: ./${{ matrix.config.os }}/
          tags: ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.image_tag }}
          load: true
          outputs: type=docker,dest=${{ runner.temp }}/${{ steps.meta.outputs.image_name }}_${{ steps.meta.outputs.image_tag }}_${{ steps.meta.outputs.image_arch }}.tar
          cache-from: type=gha,scope=${{ steps.meta.outputs.image_name }}_${{ steps.meta.outputs.image_tag }}_${{ steps.meta.outputs.image_arch }}
          cache-to: type=gha,mode=max,scope=${{ steps.meta.outputs.image_name }}_${{ steps.meta.outputs.image_tag }}_${{ steps.meta.outputs.image_arch }}

      - name: build it
        if: startsWith(matrix.config.runner_os,'macos-')
        run: |
          python3 -m venv .venv
          source .venv/bin/activate

          python3 -m pip install --upgrade pip 
          python3 -m pip install git+https://github.com/flipperdevices/chmocker.git


          echo "[#] dl img"

          wget http://ee-01.asdx.net/asdxMacOSVenturaWithBrew.tar.xz
          xz -d MacOSVenturaWithBrew.tar.xz

          ls -lh


          #cd darwin
          #sudo chmocker build -t ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.image_tag }} || true
 
          


